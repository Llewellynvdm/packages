{
    "system_name": "Update (git.vdm.dev) J5",
    "class_extends": "ae2fafb4-e84b-4534-ba9c-6c9e1700b318",
    "joomla_plugin_group": "93940067-92d1-4cc2-b4e2-d3fc118d99bd",
    "add_sql": 0,
    "add_php_method_uninstall": 0,
    "add_php_postflight_update": 0,
    "add_php_postflight_install": 0,
    "add_update_server": 0,
    "method_selection": {
        "method_selection0": {
            "method": "e64853c8-beaa-482f-993c-920d73563210"
        }
    },
    "property_selection": {
        "property_selection0": {
            "property": "437b3159-1408-4fa2-91b0-8b5e5b7527a3"
        }
    },
    "add_head": 1,
    "add_sql_uninstall": 0,
    "addreadme": 0,
    "head": "use Joomla\\CMS\\Uri\\Uri;\r\nuse Joomla\\CMS\\Language\\Text;\r\nuse Joomla\\CMS\\Component\\ComponentHelper;",
    "update_server_target": 1,
    "main_class_code": "\t\/**\r\n\t * Affects constructor behaviour. If true, language files will be loaded automatically.\r\n\t *\r\n\t * @var    boolean\r\n\t * @since  1.0.0\r\n\t *\/\r\n\tprotected  $autoloadLanguage = true;\r\n\r\n\t\/**\r\n\t * onInstallerBeforePackageDownload.\r\n\t *\r\n\t * For modification of URL and headers before package download\r\n\t *\r\n\t * @param   string  $url      The URL of the package being downloaded\r\n\t * @param   array   $headers  The HTTP headers to include with the request\r\n\t *\r\n\t * @return  void\r\n\t *\r\n\t * @since   1.0\r\n\t *\/\r\n\tpublic function onInstallerBeforePackageDownload(&$url, &$headers)\r\n\t{\r\n\t\t\/\/ set the URI object\r\n\t\t$uri = Uri::getInstance($url);\r\n\t\t$parts = explode('\/', $uri->getPath());\r\n\r\n\t\t\/\/ check that this is our API\r\n\t\tif ($uri->getHost() == '[[[gitea_url]]]' && in_array('[[[gitea_package_name]]]', $parts))\r\n\t\t{\r\n\t\t\t\/\/ get the token if set\r\n\t\t\t$token = ComponentHelper::getParams('com_[[[component]]]')->get('gitea_token', false);\r\n\r\n\t\t\t\/\/ only add the Authorization header if token is set\r\n\t\t\tif ($token)\r\n\t\t\t{\r\n\t\t\t\t\/\/ Add the token as an Authorization header\r\n\t\t\t\t$headers[] = 'Authorization: token ' . $token;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t\/\/ set the return URL\r\n\t\t\t\t$return = urlencode(base64_encode((string) Uri::getInstance()));\r\n\t\t\t\t\/\/ set the URLs\r\n\t\t\t\t$get_access_token_url = '\"https:\/\/[[[gitea_url]]]\/user\/settings\/applications\" target=\"_blank\" title=\"' . Text::_('Get Access Token') . '\"';\r\n\t\t\t\t$set_access_token_url = '\"' . Uri::root() . 'administrator\/index.php?option=com_config&view=component&component=com_[[[component]]]&path=&return=' . $return . '\" title=\"' . Text::_('Set Access Token') . '\"';\r\n\r\n\t\t\t\t\/\/ Load the message\r\n\t\t\t\t$this->getApplication()->enqueueMessage(\r\n\t\t\t\t\tText::sprintf(\r\n\t\t\t\t\t\t\"If there was a download\/update error, it's probably because the <a href=%s >API Access Token<\/a> for updates of [[[component]]] has not been set, you can set this access token in the <a href=%s >global options tab<\/a>.\",\r\n\t\t\t\t\t\t$get_access_token_url,\r\n\t\t\t\t\t\t$set_access_token_url\r\n\t\t\t\t\t),\r\n\t\t\t\t\t'notice'\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}",
    "description": "Add Access Token to easy update [[[Component]]]",
    "php_postflight_install": "",
    "plugin_version": "3.0.0",
    "php_postflight_update": "",
    "fields": null,
    "php_method_uninstall": "",
    "add_php_script_construct": 0,
    "sql": "",
    "php_script_construct": "",
    "sql_uninstall": "",
    "add_php_preflight_install": 1,
    "readme": "You can use all the normal markdown, including the place-holders.",
    "php_preflight_install": "\/\/",
    "update_server_url": "",
    "add_php_preflight_update": 0,
    "php_preflight_update": "",
    "add_php_preflight_uninstall": 0,
    "php_preflight_uninstall": "",
    "guid": "5236660d-5dee-492b-925c-15b96cb6ea44",
    "name": "[[[component]]]",
    "@dependencies": [
        {
            "key": "guid",
            "value": "ae2fafb4-e84b-4534-ba9c-6c9e1700b318",
            "entity": "class_extends",
            "table": "#__componentbuilder_class_extends",
            "direction": "out"
        },
        {
            "key": "guid",
            "value": "93940067-92d1-4cc2-b4e2-d3fc118d99bd",
            "entity": "joomla_plugin_group",
            "table": "#__componentbuilder_joomla_plugin_group",
            "direction": "out"
        },
        {
            "key": "guid",
            "value": "e64853c8-beaa-482f-993c-920d73563210",
            "entity": "class_method",
            "table": "#__componentbuilder_class_method",
            "direction": "out"
        },
        {
            "key": "guid",
            "value": "437b3159-1408-4fa2-91b0-8b5e5b7527a3",
            "entity": "class_property",
            "table": "#__componentbuilder_class_property",
            "direction": "out"
        },
        {
            "key": "target",
            "value": "[[[gitea_url]]]",
            "entity": "placeholder",
            "table": "#__componentbuilder_placeholder",
            "direction": "out"
        }
    ]
}